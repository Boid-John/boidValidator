type Device {
  id: ID! @id
  power: Float
  rvnPower: Float
  boincPower: Float
  createdAt: DateTime! @createdAt
  powerRatings: [DevicePowerRating]
  rvnShares: [shareData]
  workUnits: [workUnit]
  wcgid: String @unique
  rvnid: String @unique
  wcgKey: String
}

type shareData {
  id: ID! @id
  createdAt: DateTime! @createdAt
  shareId:Int!
  time: DateTime!
  valid: Boolean! @default(value:true)
  difficulty:Float!
  shareDifficulty:Float!
  device: Device
  shareHash: String! @unique
  power: Float
  deviceId: String!
}

type DevicePowerRating {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  power: Float!
  device: Device
  rvnPower: Float
  boincPower: Float
  roundTime: DateTime
}

type CronJob {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String! @unique
  enabled: Boolean! @default(value:true)
  runs: [CronRun!]!
}

type CronRun {
  id: ID! @id 
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  job: CronJob!
  runtime: Int
  results: Json
  errors: Json
}

type workUnit {
  id: ID! @id
  createdAt: DateTime! @createdAt
  validatedAt: DateTime
  appName: String
  claimedCredit: Float
  cpuTime: Float
  elapsedTime: Float
  exitStatus: Int
  grantedCredit: Float
  deviceId: Int
  deviceName: String
  workUnitId: Int @unique
  resultId: Int
  name: String
  outcome: Int
  receivedTime: DateTime
  reportDeadline: DateTime
  sentTime: DateTime
  serverState: Int
  validateState: Int
  fileDeleteState: Int
  device: Device
  power: Float
}